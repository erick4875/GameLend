Index: app/src/main/java/com/example/gamelend/activities/GameListActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gamelend.activities;\r\n\r\nimport android.content.Intent; // Para iniciar GameDetailActivity\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.gamelend.R;\r\nimport com.example.gamelend.dto.GameSummaryDTO; // DTO de la API\r\nimport com.example.gamelend.models.Game;         // Modelo local para la UI (com.example.gamelend.models.Game)\r\nimport com.example.gamelend.models.GameAdapter;\r\n// import com.example.gamelend.models.GameStatus; // Si lo usas en el mapeo\r\nimport com.example.gamelend.viewmodel.GameListViewModel;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n// import java.util.stream.Collectors; // Si usas streams para mapear\r\n\r\npublic class GameListActivity extends AppCompatActivity implements GameAdapter.OnGameItemClickListener {\r\n\r\n    private static final String TAG = \"GameListActivity\";\r\n\r\n    private RecyclerView gamesRecyclerView;\r\n    private GameAdapter gameAdapter;\r\n    private ProgressBar loadingProgressBar;\r\n    private GameListViewModel gameListViewModel;\r\n\r\n    public static final String EXTRA_GAME_ID = \"com.example.gamelend.GAME_ID\"; // Constante para el extra del Intent\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_game_list); // Tu XML actualizado\r\n\r\n        Toolbar toolbar = findViewById(R.id.gameListToolbar);\r\n        setSupportActionBar(toolbar);\r\n        if (getSupportActionBar() != null) {\r\n            getSupportActionBar().setDisplayHomeAsUpEnabled(true); // Muestra la flecha \"atrás\"\r\n            getSupportActionBar().setDisplayShowHomeEnabled(true);\r\n        }\r\n\r\n        gamesRecyclerView = findViewById(R.id.gamesRecyclerView);\r\n        loadingProgressBar = findViewById(R.id.gameListProgressBar);\r\n\r\n        gamesRecyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n        gamesRecyclerView.setHasFixedSize(true);\r\n\r\n        gameAdapter = new GameAdapter(this, new ArrayList<Game>(), this);\r\n        gamesRecyclerView.setAdapter(gameAdapter);\r\n\r\n        gameListViewModel = new ViewModelProvider(this,\r\n                ViewModelProvider.AndroidViewModelFactory.getInstance(getApplication()))\r\n                .get(GameListViewModel.class);\r\n\r\n        setupViewModelObservers();\r\n\r\n        Log.d(TAG, \"Solicitando la lista de juegos...\");\r\n        gameListViewModel.fetchAllGames();\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        if (item.getItemId() == android.R.id.home) {\r\n            onBackPressed();\r\n            return true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    private void setupViewModelObservers() {\r\n        gameListViewModel.isLoadingLiveData.observe(this, isLoading -> {\r\n            Log.d(TAG, \"isLoading LiveData changed: \" + isLoading);\r\n            if (isLoading != null) {\r\n                loadingProgressBar.setVisibility(isLoading ? View.VISIBLE : View.GONE);\r\n                gamesRecyclerView.setVisibility(isLoading ? View.GONE : View.VISIBLE);\r\n            }\r\n        });\r\n\r\n        gameListViewModel.gamesListLiveData.observe(this, gameSummaryDTOs -> {\r\n            if (gameSummaryDTOs != null) {\r\n                Log.d(TAG, \"GamesList LiveData (DTOs) changed, count: \" + gameSummaryDTOs.size());\r\n                List<Game> uiGameList = mapGameSummaryDTOsToGames(gameSummaryDTOs);\r\n                gameAdapter.submitList(uiGameList);\r\n            } else {\r\n                gameAdapter.submitList(new ArrayList<>());\r\n            }\r\n        });\r\n\r\n        gameListViewModel.errorLiveData.observe(this, error -> {\r\n            if (error != null && !error.isEmpty()) {\r\n                Log.e(TAG, \"errorMessage LiveData changed: \" + error);\r\n                Toast.makeText(this, error, Toast.LENGTH_LONG).show();\r\n                gameListViewModel.clearFetchGamesError();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Mapea una lista de GameSummaryDTO (de la API) a una lista de Game (modelo de UI).\r\n     * @param dtos Lista de GameSummaryDTO.\r\n     * @return Lista de objetos Game para la UI.\r\n     */\r\n    private List<Game> mapGameSummaryDTOsToGames(List<GameSummaryDTO> dtos) {\r\n        List<Game> uiGames = new ArrayList<>();\r\n        if (dtos == null) return uiGames;\r\n\r\n        for (GameSummaryDTO dto : dtos) {\r\n            if (dto != null) {\r\n                String title = dto.getTitle() != null ? dto.getTitle() : \"Título no disponible\";\r\n                Long gameId = dto.getId(); // Asumimos que GameSummaryDTO tiene getId()\r\n\r\n                // Usando el constructor de models.Game que ahora incluye id\r\n                // public Game(Long id, String name, int imageResourceId)\r\n                uiGames.add(new Game(gameId, title, R.drawable.mando)); // R.drawable.mando es un placeholder\r\n            }\r\n        }\r\n        return uiGames;\r\n    }\r\n\r\n    /**\r\n     * Se llama cuando un ítem de la lista de juegos es clickeado.\r\n     * @param clickedGame El objeto 'Game' (de tu paquete models) que fue clickeado.\r\n     */\r\n    @Override\r\n    public void onGameItemClick(Game clickedGame) {\r\n        Log.d(TAG, \"Juego clickeado: \" + clickedGame.getName() + \" (ID: \" + clickedGame.getId() + \")\");\r\n        Toast.makeText(this, \"Juego: \" + clickedGame.getName(), Toast.LENGTH_SHORT).show();\r\n\r\n        if (clickedGame.getId() != null) {\r\n            Intent intent = new Intent(GameListActivity.this, GameDetailActivity.class);\r\n            intent.putExtra(EXTRA_GAME_ID, clickedGame.getId()); // Pasar el ID del juego\r\n            startActivity(intent);\r\n        } else {\r\n            Log.e(TAG, \"ID del juego es null, no se puede navegar a detalles.\");\r\n            Toast.makeText(this, \"No se pudo obtener el ID del juego para ver detalles.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gamelend/activities/GameListActivity.java b/app/src/main/java/com/example/gamelend/activities/GameListActivity.java
--- a/app/src/main/java/com/example/gamelend/activities/GameListActivity.java	(revision 2cbde502a4251002d8dd2b17cf8ad71f52c5b244)
+++ b/app/src/main/java/com/example/gamelend/activities/GameListActivity.java	(date 1748426998738)
@@ -66,6 +66,8 @@
 
         Log.d(TAG, "Solicitando la lista de juegos...");
         gameListViewModel.fetchAllGames();
+
+
     }
 
     @Override
@@ -145,4 +147,5 @@
             Toast.makeText(this, "No se pudo obtener el ID del juego para ver detalles.", Toast.LENGTH_SHORT).show();
         }
     }
+
 }
\ No newline at end of file
Index: app/src/main/java/com/example/gamelend/activities/GameDetailActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gamelend.activities;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.bumptech.glide.Glide; // Para cargar imágenes\r\nimport com.example.gamelend.R;\r\nimport com.example.gamelend.dto.GameResponseDTO;\r\nimport com.example.gamelend.models.GameStatus; // Tu enum de Android\r\nimport com.example.gamelend.remote.api.ApiClient;\r\nimport com.example.gamelend.viewmodel.GameDetailViewModel;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\n\r\npublic class GameDetailActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = \"GameDetailActivity\";\r\n\r\n    private ImageView gameImageViewDetail;\r\n    private TextView gameTitleTextView, platformTextViewDetail, genreTextViewDetail,\r\n            statusTextViewDetail, ownerNameTextViewDetail, descriptionTextViewDetail;\r\n    private Button requestLoanButton;\r\n    private ProgressBar gameDetailLoadingProgressBar;\r\n\r\n    private GameDetailViewModel gameDetailViewModel;\r\n    private Long currentGameId;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_game_detail); // Tu XML para esta activity\r\n\r\n        Toolbar toolbar = findViewById(R.id.gameDetailToolbar);\r\n        setSupportActionBar(toolbar);\r\n        if (getSupportActionBar() != null) {\r\n            getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n            getSupportActionBar().setDisplayShowHomeEnabled(true);\r\n            // El título se establece desde el XML o se puede poner dinámicamente\r\n        }\r\n\r\n        // Inicializar vistas\r\n        gameImageViewDetail = findViewById(R.id.gameImageViewDetail);\r\n        gameTitleTextView = findViewById(R.id.gameTitleTextView);\r\n        platformTextViewDetail = findViewById(R.id.platformTextViewDetail);\r\n        genreTextViewDetail = findViewById(R.id.genreTextViewDetail);\r\n        statusTextViewDetail = findViewById(R.id.statusTextViewDetail);\r\n        ownerNameTextViewDetail = findViewById(R.id.ownerNameTextViewDetail);\r\n        descriptionTextViewDetail = findViewById(R.id.descriptionTextViewDetail);\r\n        requestLoanButton = findViewById(R.id.requestLoanButton);\r\n        gameDetailLoadingProgressBar = findViewById(R.id.gameDetailLoadingProgressBar);\r\n\r\n        // Obtener el ID del juego del Intent\r\n        if (getIntent() != null && getIntent().hasExtra(GameListActivity.EXTRA_GAME_ID)) {\r\n            currentGameId = getIntent().getLongExtra(GameListActivity.EXTRA_GAME_ID, -1L);\r\n        } else {\r\n            Log.e(TAG, \"No se recibió GAME_ID en el Intent.\");\r\n            Toast.makeText(this, \"Error: No se especificó el juego.\", Toast.LENGTH_LONG).show();\r\n            finish(); // Cerrar si no hay ID\r\n            return;\r\n        }\r\n\r\n        if (currentGameId == -1L) {\r\n            Log.e(TAG, \"GAME_ID inválido recibido.\");\r\n            Toast.makeText(this, \"Error: ID de juego inválido.\", Toast.LENGTH_LONG).show();\r\n            finish();\r\n            return;\r\n        }\r\n\r\n        // Inicializar ViewModel\r\n        gameDetailViewModel = new ViewModelProvider(this,\r\n                ViewModelProvider.AndroidViewModelFactory.getInstance(getApplication()))\r\n                .get(GameDetailViewModel.class);\r\n\r\n        setupViewModelObservers();\r\n\r\n        // Solicitar datos del juego\r\n        Log.d(TAG, \"Solicitando detalles para el juego ID: \" + currentGameId);\r\n        gameDetailViewModel.fetchGameDetails(currentGameId);\r\n\r\n        // Listener para el botón de solicitar préstamo\r\n        requestLoanButton.setOnClickListener(v -> {\r\n            if (currentGameId != null) {\r\n                Log.d(TAG, \"Botón Solicitar Préstamo presionado para juego ID: \" + currentGameId);\r\n                // Aquí llamarías a un método en el ViewModel para solicitar el préstamo\r\n                // gameDetailViewModel.requestLoan(currentGameId);\r\n                Toast.makeText(this, \"Solicitud de préstamo (lógica pendiente)...\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setupViewModelObservers() {\r\n        gameDetailViewModel.isLoading.observe(this, isLoading -> {\r\n            Log.d(TAG, \"isLoading LiveData changed: \" + isLoading);\r\n            if (isLoading != null) {\r\n                gameDetailLoadingProgressBar.setVisibility(isLoading ? View.VISIBLE : View.GONE);\r\n                // Podrías deshabilitar el botón de préstamo mientras carga\r\n                requestLoanButton.setEnabled(!isLoading);\r\n            }\r\n        });\r\n\r\n        gameDetailViewModel.gameDetails.observe(this, game -> {\r\n            if (game != null) {\r\n                Log.d(TAG, \"gameDetails LiveData changed: \" + game.getTitle());\r\n                populateUI(game);\r\n            } else {\r\n                Log.d(TAG, \"gameDetails LiveData es null (posiblemente después de un error inicial)\");\r\n                // No limpiar la UI aquí si el error ya se mostró,\r\n                // o si quieres mostrar un estado \"no encontrado\".\r\n            }\r\n        });\r\n\r\n        gameDetailViewModel.errorMessage.observe(this, error -> {\r\n            if (error != null && !error.isEmpty()) {\r\n                Log.e(TAG, \"errorMessage LiveData changed: \" + error);\r\n                Toast.makeText(GameDetailActivity.this, error, Toast.LENGTH_LONG).show();\r\n                gameDetailViewModel.clearErrorMessage();\r\n            }\r\n        });\r\n\r\n        // Observador para el resultado de la solicitud de préstamo\r\n        gameDetailViewModel.loanRequestSuccess.observe(this, isSuccess -> {\r\n            if (isSuccess != null) {\r\n                if (isSuccess) {\r\n                    Toast.makeText(this, \"Solicitud de préstamo enviada con éxito.\", Toast.LENGTH_LONG).show();\r\n                    // Aquí podrías querer actualizar la UI (ej. deshabilitar el botón, cambiar texto)\r\n                    // o incluso cerrar la actividad o refrescar los datos del juego.\r\n                    requestLoanButton.setEnabled(false);\r\n                    requestLoanButton.setText(\"Préstamo Solicitado\");\r\n                } else {\r\n                    // El error específico ya debería haberse mostrado por el observador de errorMessage\r\n                    if (gameDetailViewModel.errorMessage.getValue() == null || gameDetailViewModel.errorMessage.getValue().isEmpty()) {\r\n                        Toast.makeText(this, \"No se pudo solicitar el préstamo.\", Toast.LENGTH_LONG).show();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void populateUI(GameResponseDTO game) {\r\n        if (getSupportActionBar() != null) {\r\n            getSupportActionBar().setTitle(game.getTitle() != null ? game.getTitle() : getString(R.string.title_activity_game_detail));\r\n        }\r\n        gameTitleTextView.setText(game.getTitle() != null ? game.getTitle() : \"N/A\");\r\n        platformTextViewDetail.setText(game.getPlatform() != null ? game.getPlatform() : \"N/A\");\r\n        genreTextViewDetail.setText(game.getGenre() != null ? game.getGenre() : \"N/A\");\r\n\r\n        // Asumimos que GameResponseDTO tiene un campo 'status' que es un String o un Enum compatible\r\n        // con tu models.GameStatus o que puedes convertir.\r\n        // Si es un String:\r\n        statusTextViewDetail.setText(game.getStatus() != null ? game.getStatus().toString() : \"N/A\");\r\n        // Si es un enum y quieres mostrar el nombre:\r\n        // statusTextViewDetail.setText(game.getStatus() != null ? game.getStatus().name() : \"N/A\");\r\n\r\n        ownerNameTextViewDetail.setText(game.getUserName() != null ? game.getUserName() : \"N/A\"); // Asume que GameResponseDTO tiene userName\r\n        descriptionTextViewDetail.setText(game.getDescription() != null ? game.getDescription() : \"Sin descripción.\");\r\n\r\n        // Cargar imagen del juego con Glide\r\n        if (game.getImageUrl() != null && !game.getImageUrl().isEmpty()) {\r\n            Glide.with(this)\r\n                    .load(ApiClient.BASE_URL + game.getImageUrl().replaceFirst(\"/api\", \"\")) // Ajusta la URL si es relativa\r\n                    .placeholder(R.drawable.mando)\r\n                    .error(R.drawable.mando) // Crea un drawable mando_error\r\n                    .into(gameImageViewDetail);\r\n        } else {\r\n            gameImageViewDetail.setImageResource(R.drawable.mando); // Placeholder\r\n        }\r\n\r\n        // Habilitar/deshabilitar botón de préstamo según el estado del juego\r\n        // Asume que GameResponseDTO tiene un campo 'status' que es un enum\r\n        // o un String que puedes comparar con tu enum models.GameStatus.\r\n        if (game.getStatus() == com.example.gamelend.models.GameStatus.AVAILABLE) { // O game.getStatus().name().equals(\"AVAILABLE\")\r\n            requestLoanButton.setEnabled(true);\r\n            requestLoanButton.setText(R.string.button_request_loan);\r\n        } else {\r\n            requestLoanButton.setEnabled(false);\r\n            requestLoanButton.setText(game.getStatus() != null ? game.getStatus().toString() : \"No Disponible\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        if (item.getItemId() == android.R.id.home) {\r\n            onBackPressed();\r\n            return true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gamelend/activities/GameDetailActivity.java b/app/src/main/java/com/example/gamelend/activities/GameDetailActivity.java
--- a/app/src/main/java/com/example/gamelend/activities/GameDetailActivity.java	(revision 2cbde502a4251002d8dd2b17cf8ad71f52c5b244)
+++ b/app/src/main/java/com/example/gamelend/activities/GameDetailActivity.java	(date 1748426707121)
@@ -32,6 +32,7 @@
 
     private static final String TAG = "GameDetailActivity";
 
+
     private ImageView gameImageViewDetail;
     private TextView gameTitleTextView, platformTextViewDetail, genreTextViewDetail,
             statusTextViewDetail, ownerNameTextViewDetail, descriptionTextViewDetail;
Index: app/src/main/java/com/example/gamelend/models/GameAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gamelend.models; // Asegúrate que el paquete sea 'models'\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n// import androidx.cardview.widget.CardView; // Descomenta si usas CardView y tienes el ID correcto en item_game.xml\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\n// import com.bumptech.glide.Glide; // Descomenta si vas a cargar imágenes desde una URL\r\nimport com.example.gamelend.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n// El GameAdapter es responsable de tomar una lista de objetos 'Game'\r\n// y convertirlos en vistas individuales que se mostrarán en un RecyclerView.\r\npublic class GameAdapter extends RecyclerView.Adapter<GameAdapter.GameViewHolder> {\r\n\r\n    private final Context context; // Contexto de la aplicación o Activity, necesario para inflar layouts y otras operaciones.\r\n    private final List<Game> gameList; // Lista de objetos 'Game' (tu modelo local) que el adaptador mostrará.\r\n    private final OnGameItemClickListener onItemClickListener; // Interfaz para manejar clics\r\n\r\n    /**\r\n     * Interfaz para manejar clics en los ítems del RecyclerView.\r\n     * La Activity que usa este adaptador implementará esta interfaz.\r\n     */\r\n    public interface OnGameItemClickListener {\r\n        void onGameItemClick(Game game); // Se llama cuando se hace clic en un juego.\r\n    }\r\n\r\n    /**\r\n     * Constructor del GameAdapter.\r\n     * @param context El contexto de la aplicación o Activity.\r\n     * @param initialGameList Una lista inicial de juegos para mostrar (puede ser vacía).\r\n     * @param listener El listener para los eventos de clic en los ítems.\r\n     */\r\n    public GameAdapter(Context context, List<Game> initialGameList, OnGameItemClickListener listener) {\r\n        this.context = context;\r\n        // Es buena práctica crear una nueva copia de la lista para evitar modificar la original externamente.\r\n        this.gameList = new ArrayList<>(initialGameList);\r\n        this.onItemClickListener = listener; // Asigna el listener.\r\n    }\r\n\r\n    /**\r\n     * Método para actualizar la lista de juegos que muestra el adaptador.\r\n     * @param newGameList La nueva lista de juegos a mostrar.\r\n     */\r\n    public void submitList(List<Game> newGameList) {\r\n        this.gameList.clear(); // Limpia la lista actual.\r\n        if (newGameList != null) {\r\n            this.gameList.addAll(newGameList); // Añade todos los juegos de la nueva lista.\r\n        }\r\n        notifyDataSetChanged(); // Notifica al RecyclerView que los datos han cambiado y debe redibujarse.\r\n        // Para listas grandes o actualizaciones frecuentes, considera usar DiffUtil\r\n        // para un mejor rendimiento y animaciones más suaves.\r\n    }\r\n\r\n    /**\r\n     * Se llama cuando el RecyclerView necesita crear un nuevo ViewHolder.\r\n     * Un ViewHolder contiene las vistas para un solo ítem de la lista.\r\n     * @param parent El ViewGroup al que se añadirá la nueva vista (el RecyclerView).\r\n     * @param viewType El tipo de vista (útil si tienes múltiples tipos de ítems, no es el caso aquí).\r\n     * @return Un nuevo GameViewHolder que contiene la vista para un ítem.\r\n     */\r\n    @NonNull // Indica que el método nunca devolverá null.\r\n    @Override\r\n    public GameViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        // LayoutInflater se usa para crear (inflar) una vista desde un archivo de layout XML.\r\n        // R.layout.item_game es tu archivo XML que define cómo se ve cada juego en la lista.\r\n        View view = LayoutInflater.from(context).inflate(R.layout.item_game, parent, false);\r\n        return new GameViewHolder(view); // Crea y devuelve el ViewHolder con la vista inflada.\r\n    }\r\n\r\n    /**\r\n     * Se llama cuando el RecyclerView necesita mostrar los datos de un ítem en una posición específica.\r\n     * Aquí es donde se asignan los datos del objeto 'Game' a las vistas dentro del ViewHolder.\r\n     * @param holder El ViewHolder que debe ser actualizado para representar el contenido del ítem.\r\n     * @param position La posición del ítem dentro del conjunto de datos del adaptador.\r\n     */\r\n    @Override\r\n    public void onBindViewHolder(@NonNull GameViewHolder holder, int position) {\r\n        // Obtiene el objeto 'Game' actual de la lista según su posición.\r\n        Game currentGame = gameList.get(position);\r\n\r\n        // Asigna los datos del juego a las vistas del ViewHolder.\r\n        // Asumimos que tu clase 'models.Game' tiene los métodos getName() e getImageResourceId().\r\n        holder.gameNameTextView.setText(currentGame.getName());\r\n\r\n        // Cargar la imagen del juego.\r\n        // Si 'models.Game' tuviera una URL de imagen (String imageUrl) en lugar de un ID de recurso:\r\n        /*\r\n        if (currentGame.getImageUrl() != null && !currentGame.getImageUrl().isEmpty()) {\r\n            Glide.with(context)\r\n               .load(currentGame.getImageUrl()) // Carga la imagen desde la URL.\r\n               .placeholder(R.drawable.mando) // Muestra esta imagen mientras carga la real.\r\n               .error(R.drawable.mando_error)   // Muestra esta imagen si hay un error al cargar.\r\n               .into(holder.gameImageView);   // El ImageView donde se mostrará la imagen.\r\n        } else {\r\n            holder.gameImageView.setImageResource(R.drawable.mando); // Imagen por defecto si no hay URL.\r\n        }\r\n        */\r\n\r\n        // Como tu 'models.Game' actual tiene 'imageResourceId' (un int):\r\n        if (currentGame.getImageResourceId() != 0) { // Comprueba si el ID del recurso es válido (no 0).\r\n            holder.gameImageView.setImageResource(currentGame.getImageResourceId());\r\n        } else {\r\n            holder.gameImageView.setImageResource(R.drawable.mando); // Muestra una imagen por defecto si no hay una específica.\r\n        }\r\n\r\n        // Configurar un listener de clic para todo el ítem.\r\n        holder.itemView.setOnClickListener(v -> {\r\n            if (onItemClickListener != null) {\r\n                // Llama al método de la interfaz, pasando el juego que fue clickeado.\r\n                onItemClickListener.onGameItemClick(currentGame);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Devuelve el número total de ítems en el conjunto de datos que maneja el adaptador.\r\n     * @return El tamaño de la lista de juegos.\r\n     */\r\n    @Override\r\n    public int getItemCount() {\r\n        return gameList != null ? gameList.size() : 0; // Devuelve 0 si la lista es nula para evitar errores.\r\n    }\r\n\r\n    /**\r\n     * Clase interna ViewHolder.\r\n     * Representa la vista de un solo ítem en el RecyclerView y mantiene referencias\r\n     * a las subvistas (TextView, ImageView, etc.) dentro de ese ítem para un acceso eficiente.\r\n     */\r\n    public static class GameViewHolder extends RecyclerView.ViewHolder {\r\n        // Declara las vistas que contiene cada ítem de la lista.\r\n        TextView gameNameTextView;  // Para mostrar el nombre del juego.\r\n        ImageView gameImageView; // Para mostrar la imagen del juego.\r\n        // CardView gameCardView; // Descomenta si usas un CardView como raíz del ítem y necesitas referenciarlo.\r\n\r\n        public GameViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            gameNameTextView = itemView.findViewById(R.id.tvGameName);\r\n            gameImageView = itemView.findViewById(R.id.imageViewGame);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gamelend/models/GameAdapter.java b/app/src/main/java/com/example/gamelend/models/GameAdapter.java
--- a/app/src/main/java/com/example/gamelend/models/GameAdapter.java	(revision 2cbde502a4251002d8dd2b17cf8ad71f52c5b244)
+++ b/app/src/main/java/com/example/gamelend/models/GameAdapter.java	(date 1748425934003)
@@ -46,7 +46,7 @@
     }
 
     /**
-     * Método para actualizar la lista de juegos que muestra el adaptador.
+     * Metodo para actualizar la lista de juegos que muestra el adaptador.
      * @param newGameList La nueva lista de juegos a mostrar.
      */
     public void submitList(List<Game> newGameList) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n    <layouts>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_add_game.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_game_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_game_list.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_register.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_user_list.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_user_profile.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_game.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/user_cardview.xml\">\r\n        <config>\r\n          <theme>@style/Theme.GameLend</theme>\r\n        </config>\r\n      </layout>\r\n    </layouts>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"67ec050e-bdc5-4da8-b6ca-e31c44526e10\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.11.1/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.11.1/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/caches/deviceStreaming.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/GameListActivity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/GameListActivity.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/UserProfileActivity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/UserProfileActivity.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/gamelend/models/GameAdapter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/gamelend/models/GameAdapter.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_user_profile.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_user_profile.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/item_game.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/item_game.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/reports/problems/problems-report.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/reports/problems/problems-report.html\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\\Users\\adrii\\.android\\avd\\Medium_Phone.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Lutobyte&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/erick4875/GameLend.git&quot;,\r\n    &quot;accountId&quot;: &quot;056ed32b-f776-4467-86f9-49b1d1a7c55a&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vYDF2QDpjuxeVZcCvKwcU5fZER\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Android App.app.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"com.google.services.firebase.aqiPopupShown\": \"true\",\r\n    \"git-widget-placeholder\": \"frontendv3\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"settings.editor.selected.configurable\": \"reference.settingsdialog.project.gradle\"\r\n  }\r\n}]]></component>\r\n  <component name=\"PsdUISettings\">\r\n    <option name=\"MODULE_TAB\" value=\"Signing Configs\" />\r\n    <option name=\"LAST_EDITED_SIGNING_CONFIG\" value=\"debug\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"GameLend.app\" />\r\n      <option name=\"ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION\" value=\"1\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"ALLOW_ASSUME_VERIFIED\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"RESTORE_ENABLED\" value=\"false\" />\r\n      <option name=\"RESTORE_FILE\" value=\"\" />\r\n      <option name=\"RESTORE_FRESH_INSTALL_ONLY\" value=\"false\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"67ec050e-bdc5-4da8-b6ca-e31c44526e10\" name=\"Changes\" comment=\"\" />\r\n      <created>1744313008035</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1744313008035</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"registro correcto y login llevan a UserProfilaActivity\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748080716567</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748080716567</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"modificación build.gradle.kts\" />\r\n    <MESSAGE value=\"registro correcto y login llevan a UserProfilaActivity\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"registro correcto y login llevan a UserProfilaActivity\" />\r\n  </component>\r\n  <component name=\"play_dynamic_filters_status\">\r\n    <option name=\"appIdToCheckInfo\">\r\n      <map>\r\n        <entry key=\"com.example.gamelend\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1748040426749\" />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"com.example.gamelend.test\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1748040426750\" />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2cbde502a4251002d8dd2b17cf8ad71f52c5b244)
+++ b/.idea/workspace.xml	(date 1748426707476)
@@ -62,22 +62,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="67ec050e-bdc5-4da8-b6ca-e31c44526e10" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/resourceHashesCache.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/GameDetailActivity.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/GameDetailActivity.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/GameListActivity.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/GameListActivity.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/UserProfileActivity.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/gamelend/activities/UserProfileActivity.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/gamelend/models/GameAdapter.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/gamelend/models/GameAdapter.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/activity_user_profile.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/activity_user_profile.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/item_game.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/item_game.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/reports/problems/problems-report.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/problems/problems-report.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -109,7 +97,6 @@
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
     <option name="ROOT_SYNC" value="DONT_SYNC" />
-    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
   &quot;lastFilter&quot;: {
@@ -137,21 +124,21 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Android App.app.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.cidr.known.project.marker": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "RunOnceActivity.readMode.enableVisualFormatting": "true",
-    "cf.first.check.clang-format": "false",
-    "cidr.known.project.marker": "true",
-    "com.google.services.firebase.aqiPopupShown": "true",
-    "git-widget-placeholder": "frontendv3",
-    "kotlin-language-version-configured": "true",
-    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Android App.app.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
+    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
+    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
+    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;frontendv3&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;
   }
-}]]></component>
+}</component>
   <component name="PsdUISettings">
     <option name="MODULE_TAB" value="Signing Configs" />
     <option name="LAST_EDITED_SIGNING_CONFIG" value="debug" />
@@ -247,7 +234,15 @@
       <option name="project" value="LOCAL" />
       <updated>1748080716567</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="cambios">
+      <option name="closed" value="true" />
+      <created>1748425549319</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1748425549319</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -264,19 +259,20 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="modificación build.gradle.kts" />
     <MESSAGE value="registro correcto y login llevan a UserProfilaActivity" />
-    <option name="LAST_COMMIT_MESSAGE" value="registro correcto y login llevan a UserProfilaActivity" />
+    <MESSAGE value="cambios" />
+    <option name="LAST_COMMIT_MESSAGE" value="cambios" />
   </component>
   <component name="play_dynamic_filters_status">
     <option name="appIdToCheckInfo">
       <map>
         <entry key="com.example.gamelend">
           <value>
-            <CheckInfo lastCheckTimestamp="1748040426749" />
+            <CheckInfo lastCheckTimestamp="1748425740426" />
           </value>
         </entry>
         <entry key="com.example.gamelend.test">
           <value>
-            <CheckInfo lastCheckTimestamp="1748040426750" />
+            <CheckInfo lastCheckTimestamp="1748425740424" />
           </value>
         </entry>
       </map>
